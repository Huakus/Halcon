@model Manager.Models.Campos

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<head>
    <script type="text/javascript">
        $(document).ready(function(){
            map = new GMaps({
                div: '#mapa',
                lat: @Model.LatLong.Latitude.ToString().Replace(',', '.'),
                lng: @Model.LatLong.Longitude.ToString().Replace(',', '.'),

            });

            map.addMarker({
                lat: @Model.LatLong.Latitude.ToString().Replace(',', '.'),
                lng: @Model.LatLong.Longitude.ToString().Replace(',', '.'),
            });

            GMaps.on('click', map.map, function(event) {
                var index = map.markers.length;
                var lat = event.latLng.lat();
                var lng = event.latLng.lng();

                map.removeMarkers(map.markers);

                map.addMarker({
                    lat: lat,
                    lng: lng,
                    title: 'Marker #' + index
                });

                $("#LatLong_Latitude").val(lat);
                $("#LatLong_Longitude").val(lng);
            });
        });


    </script>

</head>


<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Campos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdCampo)

        <div class="form-group">
            @Html.LabelFor(model => model.Calle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdLocalidad, "IdLocalidad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdLocalidad", (SelectList)ViewData["Localidades"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdLocalidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.LatLong.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LatLong.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LatLong.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.LatLong.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LatLong.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LatLong.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdEstado, "IdEstado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdEstado", (SelectList)ViewData["Estados"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCliente, "IdCliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCliente", (SelectList)ViewData["Clientes"], htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Mapa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="mapa" style="height:500px;width:100%" class="col-md-10">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
